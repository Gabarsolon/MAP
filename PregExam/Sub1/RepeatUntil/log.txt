Program id: 0
ExeStack:
[(VarDeclStmt{name='v', typ=int}
(VarDeclStmt{name='x', typ=int}
(VarDeclStmt{name='y', typ=int}
(v=ValueExp{e=0}
(repeat{stmt1=(forkStmt{stmt=(print(VarExp{id='v'})
v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2})}
v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=1}), exp2=RelExp{exp1=VarExp{id='v'}, exp2=ValueExp{e=3}, op='=='}}
(x=ValueExp{e=1}
(NopStmt{}
(y=ValueExp{e=3}
(NopStmt{}
print(ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=10}, op=3}))))))))))]
SymTable:
{}
Out:
[]
FileTable:
{}
HeapTable:
{}
----------------------------
Program id: 0
ExeStack:
[(VarDeclStmt{name='x', typ=int}
(VarDeclStmt{name='y', typ=int}
(v=ValueExp{e=0}
(repeat{stmt1=(forkStmt{stmt=(print(VarExp{id='v'})
v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2})}
v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=1}), exp2=RelExp{exp1=VarExp{id='v'}, exp2=ValueExp{e=3}, op='=='}}
(x=ValueExp{e=1}
(NopStmt{}
(y=ValueExp{e=3}
(NopStmt{}
print(ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=10}, op=3}))))))))), VarDeclStmt{name='v', typ=int}]
SymTable:
{}
Out:
[]
FileTable:
{}
HeapTable:
{}
----------------------------
Program id: 0
ExeStack:
[(VarDeclStmt{name='x', typ=int}
(VarDeclStmt{name='y', typ=int}
(v=ValueExp{e=0}
(repeat{stmt1=(forkStmt{stmt=(print(VarExp{id='v'})
v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2})}
v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=1}), exp2=RelExp{exp1=VarExp{id='v'}, exp2=ValueExp{e=3}, op='=='}}
(x=ValueExp{e=1}
(NopStmt{}
(y=ValueExp{e=3}
(NopStmt{}
print(ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=10}, op=3}))))))))), VarDeclStmt{name='v', typ=int}]
SymTable:
{}
Out:
[]
FileTable:
{}
HeapTable:
{}
----------------------------
Program id: 0
ExeStack:
[(VarDeclStmt{name='x', typ=int}
(VarDeclStmt{name='y', typ=int}
(v=ValueExp{e=0}
(repeat{stmt1=(forkStmt{stmt=(print(VarExp{id='v'})
v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2})}
v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=1}), exp2=RelExp{exp1=VarExp{id='v'}, exp2=ValueExp{e=3}, op='=='}}
(x=ValueExp{e=1}
(NopStmt{}
(y=ValueExp{e=3}
(NopStmt{}
print(ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=10}, op=3})))))))))]
SymTable:
{v=0}
Out:
[]
FileTable:
{}
HeapTable:
{}
----------------------------
Program id: 0
ExeStack:
[(VarDeclStmt{name='x', typ=int}
(VarDeclStmt{name='y', typ=int}
(v=ValueExp{e=0}
(repeat{stmt1=(forkStmt{stmt=(print(VarExp{id='v'})
v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2})}
v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=1}), exp2=RelExp{exp1=VarExp{id='v'}, exp2=ValueExp{e=3}, op='=='}}
(x=ValueExp{e=1}
(NopStmt{}
(y=ValueExp{e=3}
(NopStmt{}
print(ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=10}, op=3})))))))))]
SymTable:
{v=0}
Out:
[]
FileTable:
{}
HeapTable:
{}
----------------------------
Program id: 0
ExeStack:
[(VarDeclStmt{name='y', typ=int}
(v=ValueExp{e=0}
(repeat{stmt1=(forkStmt{stmt=(print(VarExp{id='v'})
v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2})}
v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=1}), exp2=RelExp{exp1=VarExp{id='v'}, exp2=ValueExp{e=3}, op='=='}}
(x=ValueExp{e=1}
(NopStmt{}
(y=ValueExp{e=3}
(NopStmt{}
print(ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=10}, op=3})))))))), VarDeclStmt{name='x', typ=int}]
SymTable:
{v=0}
Out:
[]
FileTable:
{}
HeapTable:
{}
----------------------------
Program id: 0
ExeStack:
[(VarDeclStmt{name='y', typ=int}
(v=ValueExp{e=0}
(repeat{stmt1=(forkStmt{stmt=(print(VarExp{id='v'})
v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2})}
v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=1}), exp2=RelExp{exp1=VarExp{id='v'}, exp2=ValueExp{e=3}, op='=='}}
(x=ValueExp{e=1}
(NopStmt{}
(y=ValueExp{e=3}
(NopStmt{}
print(ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=10}, op=3})))))))), VarDeclStmt{name='x', typ=int}]
SymTable:
{v=0}
Out:
[]
FileTable:
{}
HeapTable:
{}
----------------------------
Program id: 0
ExeStack:
[(VarDeclStmt{name='y', typ=int}
(v=ValueExp{e=0}
(repeat{stmt1=(forkStmt{stmt=(print(VarExp{id='v'})
v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2})}
v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=1}), exp2=RelExp{exp1=VarExp{id='v'}, exp2=ValueExp{e=3}, op='=='}}
(x=ValueExp{e=1}
(NopStmt{}
(y=ValueExp{e=3}
(NopStmt{}
print(ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=10}, op=3}))))))))]
SymTable:
{v=0, x=0}
Out:
[]
FileTable:
{}
HeapTable:
{}
----------------------------
Program id: 0
ExeStack:
[(VarDeclStmt{name='y', typ=int}
(v=ValueExp{e=0}
(repeat{stmt1=(forkStmt{stmt=(print(VarExp{id='v'})
v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2})}
v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=1}), exp2=RelExp{exp1=VarExp{id='v'}, exp2=ValueExp{e=3}, op='=='}}
(x=ValueExp{e=1}
(NopStmt{}
(y=ValueExp{e=3}
(NopStmt{}
print(ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=10}, op=3}))))))))]
SymTable:
{v=0, x=0}
Out:
[]
FileTable:
{}
HeapTable:
{}
----------------------------
Program id: 0
ExeStack:
[(v=ValueExp{e=0}
(repeat{stmt1=(forkStmt{stmt=(print(VarExp{id='v'})
v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2})}
v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=1}), exp2=RelExp{exp1=VarExp{id='v'}, exp2=ValueExp{e=3}, op='=='}}
(x=ValueExp{e=1}
(NopStmt{}
(y=ValueExp{e=3}
(NopStmt{}
print(ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=10}, op=3}))))))), VarDeclStmt{name='y', typ=int}]
SymTable:
{v=0, x=0}
Out:
[]
FileTable:
{}
HeapTable:
{}
----------------------------
Program id: 0
ExeStack:
[(v=ValueExp{e=0}
(repeat{stmt1=(forkStmt{stmt=(print(VarExp{id='v'})
v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2})}
v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=1}), exp2=RelExp{exp1=VarExp{id='v'}, exp2=ValueExp{e=3}, op='=='}}
(x=ValueExp{e=1}
(NopStmt{}
(y=ValueExp{e=3}
(NopStmt{}
print(ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=10}, op=3}))))))), VarDeclStmt{name='y', typ=int}]
SymTable:
{v=0, x=0}
Out:
[]
FileTable:
{}
HeapTable:
{}
----------------------------
Program id: 0
ExeStack:
[(v=ValueExp{e=0}
(repeat{stmt1=(forkStmt{stmt=(print(VarExp{id='v'})
v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2})}
v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=1}), exp2=RelExp{exp1=VarExp{id='v'}, exp2=ValueExp{e=3}, op='=='}}
(x=ValueExp{e=1}
(NopStmt{}
(y=ValueExp{e=3}
(NopStmt{}
print(ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=10}, op=3})))))))]
SymTable:
{v=0, x=0, y=0}
Out:
[]
FileTable:
{}
HeapTable:
{}
----------------------------
Program id: 0
ExeStack:
[(v=ValueExp{e=0}
(repeat{stmt1=(forkStmt{stmt=(print(VarExp{id='v'})
v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2})}
v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=1}), exp2=RelExp{exp1=VarExp{id='v'}, exp2=ValueExp{e=3}, op='=='}}
(x=ValueExp{e=1}
(NopStmt{}
(y=ValueExp{e=3}
(NopStmt{}
print(ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=10}, op=3})))))))]
SymTable:
{v=0, x=0, y=0}
Out:
[]
FileTable:
{}
HeapTable:
{}
----------------------------
Program id: 0
ExeStack:
[(repeat{stmt1=(forkStmt{stmt=(print(VarExp{id='v'})
v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2})}
v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=1}), exp2=RelExp{exp1=VarExp{id='v'}, exp2=ValueExp{e=3}, op='=='}}
(x=ValueExp{e=1}
(NopStmt{}
(y=ValueExp{e=3}
(NopStmt{}
print(ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=10}, op=3})))))), v=ValueExp{e=0}]
SymTable:
{v=0, x=0, y=0}
Out:
[]
FileTable:
{}
HeapTable:
{}
----------------------------
Program id: 0
ExeStack:
[(repeat{stmt1=(forkStmt{stmt=(print(VarExp{id='v'})
v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2})}
v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=1}), exp2=RelExp{exp1=VarExp{id='v'}, exp2=ValueExp{e=3}, op='=='}}
(x=ValueExp{e=1}
(NopStmt{}
(y=ValueExp{e=3}
(NopStmt{}
print(ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=10}, op=3})))))), v=ValueExp{e=0}]
SymTable:
{v=0, x=0, y=0}
Out:
[]
FileTable:
{}
HeapTable:
{}
----------------------------
Program id: 0
ExeStack:
[(repeat{stmt1=(forkStmt{stmt=(print(VarExp{id='v'})
v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2})}
v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=1}), exp2=RelExp{exp1=VarExp{id='v'}, exp2=ValueExp{e=3}, op='=='}}
(x=ValueExp{e=1}
(NopStmt{}
(y=ValueExp{e=3}
(NopStmt{}
print(ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=10}, op=3}))))))]
SymTable:
{v=0, x=0, y=0}
Out:
[]
FileTable:
{}
HeapTable:
{}
----------------------------
Program id: 0
ExeStack:
[(repeat{stmt1=(forkStmt{stmt=(print(VarExp{id='v'})
v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2})}
v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=1}), exp2=RelExp{exp1=VarExp{id='v'}, exp2=ValueExp{e=3}, op='=='}}
(x=ValueExp{e=1}
(NopStmt{}
(y=ValueExp{e=3}
(NopStmt{}
print(ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=10}, op=3}))))))]
SymTable:
{v=0, x=0, y=0}
Out:
[]
FileTable:
{}
HeapTable:
{}
----------------------------
Program id: 0
ExeStack:
[(x=ValueExp{e=1}
(NopStmt{}
(y=ValueExp{e=3}
(NopStmt{}
print(ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=10}, op=3}))))), repeat{stmt1=(forkStmt{stmt=(print(VarExp{id='v'})
v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2})}
v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=1}), exp2=RelExp{exp1=VarExp{id='v'}, exp2=ValueExp{e=3}, op='=='}}]
SymTable:
{v=0, x=0, y=0}
Out:
[]
FileTable:
{}
HeapTable:
{}
----------------------------
Program id: 0
ExeStack:
[(x=ValueExp{e=1}
(NopStmt{}
(y=ValueExp{e=3}
(NopStmt{}
print(ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=10}, op=3}))))), repeat{stmt1=(forkStmt{stmt=(print(VarExp{id='v'})
v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2})}
v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=1}), exp2=RelExp{exp1=VarExp{id='v'}, exp2=ValueExp{e=3}, op='=='}}]
SymTable:
{v=0, x=0, y=0}
Out:
[]
FileTable:
{}
HeapTable:
{}
----------------------------
Program id: 0
ExeStack:
[(x=ValueExp{e=1}
(NopStmt{}
(y=ValueExp{e=3}
(NopStmt{}
print(ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=10}, op=3}))))), ((forkStmt{stmt=(print(VarExp{id='v'})
v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2})}
v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=1})
WhileStmt{exp=NegateExp{exp=RelExp{exp1=VarExp{id='v'}, exp2=ValueExp{e=3}, op='=='}}, stmt=(forkStmt{stmt=(print(VarExp{id='v'})
v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2})}
v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=1})})]
SymTable:
{v=0, x=0, y=0}
Out:
[]
FileTable:
{}
HeapTable:
{}
----------------------------
Program id: 0
ExeStack:
[(x=ValueExp{e=1}
(NopStmt{}
(y=ValueExp{e=3}
(NopStmt{}
print(ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=10}, op=3}))))), ((forkStmt{stmt=(print(VarExp{id='v'})
v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2})}
v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=1})
WhileStmt{exp=NegateExp{exp=RelExp{exp1=VarExp{id='v'}, exp2=ValueExp{e=3}, op='=='}}, stmt=(forkStmt{stmt=(print(VarExp{id='v'})
v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2})}
v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=1})})]
SymTable:
{v=0, x=0, y=0}
Out:
[]
FileTable:
{}
HeapTable:
{}
----------------------------
Program id: 0
ExeStack:
[(x=ValueExp{e=1}
(NopStmt{}
(y=ValueExp{e=3}
(NopStmt{}
print(ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=10}, op=3}))))), WhileStmt{exp=NegateExp{exp=RelExp{exp1=VarExp{id='v'}, exp2=ValueExp{e=3}, op='=='}}, stmt=(forkStmt{stmt=(print(VarExp{id='v'})
v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2})}
v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=1})}, (forkStmt{stmt=(print(VarExp{id='v'})
v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2})}
v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=1})]
SymTable:
{v=0, x=0, y=0}
Out:
[]
FileTable:
{}
HeapTable:
{}
----------------------------
Program id: 0
ExeStack:
[(x=ValueExp{e=1}
(NopStmt{}
(y=ValueExp{e=3}
(NopStmt{}
print(ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=10}, op=3}))))), WhileStmt{exp=NegateExp{exp=RelExp{exp1=VarExp{id='v'}, exp2=ValueExp{e=3}, op='=='}}, stmt=(forkStmt{stmt=(print(VarExp{id='v'})
v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2})}
v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=1})}, (forkStmt{stmt=(print(VarExp{id='v'})
v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2})}
v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=1})]
SymTable:
{v=0, x=0, y=0}
Out:
[]
FileTable:
{}
HeapTable:
{}
----------------------------
Program id: 0
ExeStack:
[(x=ValueExp{e=1}
(NopStmt{}
(y=ValueExp{e=3}
(NopStmt{}
print(ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=10}, op=3}))))), WhileStmt{exp=NegateExp{exp=RelExp{exp1=VarExp{id='v'}, exp2=ValueExp{e=3}, op='=='}}, stmt=(forkStmt{stmt=(print(VarExp{id='v'})
v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2})}
v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=1})}, v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=1}, forkStmt{stmt=(print(VarExp{id='v'})
v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2})}]
SymTable:
{v=0, x=0, y=0}
Out:
[]
FileTable:
{}
HeapTable:
{}
----------------------------
Program id: 0
ExeStack:
[(x=ValueExp{e=1}
(NopStmt{}
(y=ValueExp{e=3}
(NopStmt{}
print(ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=10}, op=3}))))), WhileStmt{exp=NegateExp{exp=RelExp{exp1=VarExp{id='v'}, exp2=ValueExp{e=3}, op='=='}}, stmt=(forkStmt{stmt=(print(VarExp{id='v'})
v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2})}
v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=1})}, v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=1}, forkStmt{stmt=(print(VarExp{id='v'})
v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2})}]
SymTable:
{v=0, x=0, y=0}
Out:
[]
FileTable:
{}
HeapTable:
{}
----------------------------
Program id: 0
ExeStack:
[(x=ValueExp{e=1}
(NopStmt{}
(y=ValueExp{e=3}
(NopStmt{}
print(ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=10}, op=3}))))), WhileStmt{exp=NegateExp{exp=RelExp{exp1=VarExp{id='v'}, exp2=ValueExp{e=3}, op='=='}}, stmt=(forkStmt{stmt=(print(VarExp{id='v'})
v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2})}
v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=1})}, v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=1}]
SymTable:
{v=0, x=0, y=0}
Out:
[]
FileTable:
{}
HeapTable:
{}
----------------------------
Program id: 1
ExeStack:
[(print(VarExp{id='v'})
v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2})]
SymTable:
{v=0, x=0, y=0}
Out:
[]
FileTable:
{}
HeapTable:
{}
----------------------------
Program id: 0
ExeStack:
[(x=ValueExp{e=1}
(NopStmt{}
(y=ValueExp{e=3}
(NopStmt{}
print(ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=10}, op=3}))))), WhileStmt{exp=NegateExp{exp=RelExp{exp1=VarExp{id='v'}, exp2=ValueExp{e=3}, op='=='}}, stmt=(forkStmt{stmt=(print(VarExp{id='v'})
v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2})}
v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=1})}, v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=1}]
SymTable:
{v=0, x=0, y=0}
Out:
[]
FileTable:
{}
HeapTable:
{}
----------------------------
Program id: 1
ExeStack:
[(print(VarExp{id='v'})
v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2})]
SymTable:
{v=0, x=0, y=0}
Out:
[]
FileTable:
{}
HeapTable:
{}
----------------------------
Program id: 0
ExeStack:
[(x=ValueExp{e=1}
(NopStmt{}
(y=ValueExp{e=3}
(NopStmt{}
print(ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=10}, op=3}))))), WhileStmt{exp=NegateExp{exp=RelExp{exp1=VarExp{id='v'}, exp2=ValueExp{e=3}, op='=='}}, stmt=(forkStmt{stmt=(print(VarExp{id='v'})
v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2})}
v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=1})}]
SymTable:
{v=1, x=0, y=0}
Out:
[]
FileTable:
{}
HeapTable:
{}
----------------------------
Program id: 1
ExeStack:
[v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2}, print(VarExp{id='v'})]
SymTable:
{v=0, x=0, y=0}
Out:
[]
FileTable:
{}
HeapTable:
{}
----------------------------
Program id: 0
ExeStack:
[(x=ValueExp{e=1}
(NopStmt{}
(y=ValueExp{e=3}
(NopStmt{}
print(ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=10}, op=3}))))), WhileStmt{exp=NegateExp{exp=RelExp{exp1=VarExp{id='v'}, exp2=ValueExp{e=3}, op='=='}}, stmt=(forkStmt{stmt=(print(VarExp{id='v'})
v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2})}
v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=1})}]
SymTable:
{v=1, x=0, y=0}
Out:
[]
FileTable:
{}
HeapTable:
{}
----------------------------
Program id: 1
ExeStack:
[v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2}, print(VarExp{id='v'})]
SymTable:
{v=0, x=0, y=0}
Out:
[]
FileTable:
{}
HeapTable:
{}
----------------------------
Program id: 0
ExeStack:
[(x=ValueExp{e=1}
(NopStmt{}
(y=ValueExp{e=3}
(NopStmt{}
print(ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=10}, op=3}))))), WhileStmt{exp=NegateExp{exp=RelExp{exp1=VarExp{id='v'}, exp2=ValueExp{e=3}, op='=='}}, stmt=(forkStmt{stmt=(print(VarExp{id='v'})
v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2})}
v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=1})}, (forkStmt{stmt=(print(VarExp{id='v'})
v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2})}
v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=1})]
SymTable:
{v=1, x=0, y=0}
Out:
[0]
FileTable:
{}
HeapTable:
{}
----------------------------
Program id: 1
ExeStack:
[v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2}]
SymTable:
{v=0, x=0, y=0}
Out:
[0]
FileTable:
{}
HeapTable:
{}
----------------------------
Program id: 0
ExeStack:
[(x=ValueExp{e=1}
(NopStmt{}
(y=ValueExp{e=3}
(NopStmt{}
print(ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=10}, op=3}))))), WhileStmt{exp=NegateExp{exp=RelExp{exp1=VarExp{id='v'}, exp2=ValueExp{e=3}, op='=='}}, stmt=(forkStmt{stmt=(print(VarExp{id='v'})
v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2})}
v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=1})}, (forkStmt{stmt=(print(VarExp{id='v'})
v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2})}
v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=1})]
SymTable:
{v=1, x=0, y=0}
Out:
[0]
FileTable:
{}
HeapTable:
{}
----------------------------
Program id: 1
ExeStack:
[v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2}]
SymTable:
{v=0, x=0, y=0}
Out:
[0]
FileTable:
{}
HeapTable:
{}
----------------------------
Program id: 0
ExeStack:
[(x=ValueExp{e=1}
(NopStmt{}
(y=ValueExp{e=3}
(NopStmt{}
print(ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=10}, op=3}))))), WhileStmt{exp=NegateExp{exp=RelExp{exp1=VarExp{id='v'}, exp2=ValueExp{e=3}, op='=='}}, stmt=(forkStmt{stmt=(print(VarExp{id='v'})
v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2})}
v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=1})}, v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=1}, forkStmt{stmt=(print(VarExp{id='v'})
v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2})}]
SymTable:
{v=1, x=0, y=0}
Out:
[0]
FileTable:
{}
HeapTable:
{}
----------------------------
Program id: 1
ExeStack:
[]
SymTable:
{v=-1, x=0, y=0}
Out:
[0]
FileTable:
{}
HeapTable:
{}
----------------------------
Program id: 0
ExeStack:
[(x=ValueExp{e=1}
(NopStmt{}
(y=ValueExp{e=3}
(NopStmt{}
print(ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=10}, op=3}))))), WhileStmt{exp=NegateExp{exp=RelExp{exp1=VarExp{id='v'}, exp2=ValueExp{e=3}, op='=='}}, stmt=(forkStmt{stmt=(print(VarExp{id='v'})
v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2})}
v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=1})}, v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=1}, forkStmt{stmt=(print(VarExp{id='v'})
v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2})}]
SymTable:
{v=1, x=0, y=0}
Out:
[0]
FileTable:
{}
HeapTable:
{}
----------------------------
Program id: 0
ExeStack:
[(x=ValueExp{e=1}
(NopStmt{}
(y=ValueExp{e=3}
(NopStmt{}
print(ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=10}, op=3}))))), WhileStmt{exp=NegateExp{exp=RelExp{exp1=VarExp{id='v'}, exp2=ValueExp{e=3}, op='=='}}, stmt=(forkStmt{stmt=(print(VarExp{id='v'})
v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2})}
v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=1})}, v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=1}]
SymTable:
{v=1, x=0, y=0}
Out:
[0]
FileTable:
{}
HeapTable:
{}
----------------------------
Program id: 2
ExeStack:
[(print(VarExp{id='v'})
v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2})]
SymTable:
{v=1, x=0, y=0}
Out:
[0]
FileTable:
{}
HeapTable:
{}
----------------------------
Program id: 0
ExeStack:
[(x=ValueExp{e=1}
(NopStmt{}
(y=ValueExp{e=3}
(NopStmt{}
print(ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=10}, op=3}))))), WhileStmt{exp=NegateExp{exp=RelExp{exp1=VarExp{id='v'}, exp2=ValueExp{e=3}, op='=='}}, stmt=(forkStmt{stmt=(print(VarExp{id='v'})
v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2})}
v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=1})}, v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=1}]
SymTable:
{v=1, x=0, y=0}
Out:
[0]
FileTable:
{}
HeapTable:
{}
----------------------------
Program id: 2
ExeStack:
[(print(VarExp{id='v'})
v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2})]
SymTable:
{v=1, x=0, y=0}
Out:
[0]
FileTable:
{}
HeapTable:
{}
----------------------------
Program id: 0
ExeStack:
[(x=ValueExp{e=1}
(NopStmt{}
(y=ValueExp{e=3}
(NopStmt{}
print(ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=10}, op=3}))))), WhileStmt{exp=NegateExp{exp=RelExp{exp1=VarExp{id='v'}, exp2=ValueExp{e=3}, op='=='}}, stmt=(forkStmt{stmt=(print(VarExp{id='v'})
v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2})}
v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=1})}]
SymTable:
{v=2, x=0, y=0}
Out:
[0]
FileTable:
{}
HeapTable:
{}
----------------------------
Program id: 2
ExeStack:
[v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2}, print(VarExp{id='v'})]
SymTable:
{v=1, x=0, y=0}
Out:
[0]
FileTable:
{}
HeapTable:
{}
----------------------------
Program id: 0
ExeStack:
[(x=ValueExp{e=1}
(NopStmt{}
(y=ValueExp{e=3}
(NopStmt{}
print(ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=10}, op=3}))))), WhileStmt{exp=NegateExp{exp=RelExp{exp1=VarExp{id='v'}, exp2=ValueExp{e=3}, op='=='}}, stmt=(forkStmt{stmt=(print(VarExp{id='v'})
v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2})}
v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=1})}]
SymTable:
{v=2, x=0, y=0}
Out:
[0]
FileTable:
{}
HeapTable:
{}
----------------------------
Program id: 2
ExeStack:
[v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2}, print(VarExp{id='v'})]
SymTable:
{v=1, x=0, y=0}
Out:
[0]
FileTable:
{}
HeapTable:
{}
----------------------------
Program id: 0
ExeStack:
[(x=ValueExp{e=1}
(NopStmt{}
(y=ValueExp{e=3}
(NopStmt{}
print(ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=10}, op=3}))))), WhileStmt{exp=NegateExp{exp=RelExp{exp1=VarExp{id='v'}, exp2=ValueExp{e=3}, op='=='}}, stmt=(forkStmt{stmt=(print(VarExp{id='v'})
v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2})}
v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=1})}, (forkStmt{stmt=(print(VarExp{id='v'})
v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2})}
v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=1})]
SymTable:
{v=2, x=0, y=0}
Out:
[0, 1]
FileTable:
{}
HeapTable:
{}
----------------------------
Program id: 2
ExeStack:
[v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2}]
SymTable:
{v=1, x=0, y=0}
Out:
[0, 1]
FileTable:
{}
HeapTable:
{}
----------------------------
Program id: 0
ExeStack:
[(x=ValueExp{e=1}
(NopStmt{}
(y=ValueExp{e=3}
(NopStmt{}
print(ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=10}, op=3}))))), WhileStmt{exp=NegateExp{exp=RelExp{exp1=VarExp{id='v'}, exp2=ValueExp{e=3}, op='=='}}, stmt=(forkStmt{stmt=(print(VarExp{id='v'})
v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2})}
v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=1})}, (forkStmt{stmt=(print(VarExp{id='v'})
v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2})}
v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=1})]
SymTable:
{v=2, x=0, y=0}
Out:
[0, 1]
FileTable:
{}
HeapTable:
{}
----------------------------
Program id: 2
ExeStack:
[v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2}]
SymTable:
{v=1, x=0, y=0}
Out:
[0, 1]
FileTable:
{}
HeapTable:
{}
----------------------------
Program id: 0
ExeStack:
[(x=ValueExp{e=1}
(NopStmt{}
(y=ValueExp{e=3}
(NopStmt{}
print(ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=10}, op=3}))))), WhileStmt{exp=NegateExp{exp=RelExp{exp1=VarExp{id='v'}, exp2=ValueExp{e=3}, op='=='}}, stmt=(forkStmt{stmt=(print(VarExp{id='v'})
v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2})}
v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=1})}, v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=1}, forkStmt{stmt=(print(VarExp{id='v'})
v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2})}]
SymTable:
{v=2, x=0, y=0}
Out:
[0, 1]
FileTable:
{}
HeapTable:
{}
----------------------------
Program id: 2
ExeStack:
[]
SymTable:
{v=0, x=0, y=0}
Out:
[0, 1]
FileTable:
{}
HeapTable:
{}
----------------------------
Program id: 0
ExeStack:
[(x=ValueExp{e=1}
(NopStmt{}
(y=ValueExp{e=3}
(NopStmt{}
print(ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=10}, op=3}))))), WhileStmt{exp=NegateExp{exp=RelExp{exp1=VarExp{id='v'}, exp2=ValueExp{e=3}, op='=='}}, stmt=(forkStmt{stmt=(print(VarExp{id='v'})
v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2})}
v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=1})}, v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=1}, forkStmt{stmt=(print(VarExp{id='v'})
v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2})}]
SymTable:
{v=2, x=0, y=0}
Out:
[0, 1]
FileTable:
{}
HeapTable:
{}
----------------------------
Program id: 0
ExeStack:
[(x=ValueExp{e=1}
(NopStmt{}
(y=ValueExp{e=3}
(NopStmt{}
print(ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=10}, op=3}))))), WhileStmt{exp=NegateExp{exp=RelExp{exp1=VarExp{id='v'}, exp2=ValueExp{e=3}, op='=='}}, stmt=(forkStmt{stmt=(print(VarExp{id='v'})
v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2})}
v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=1})}, v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=1}]
SymTable:
{v=2, x=0, y=0}
Out:
[0, 1]
FileTable:
{}
HeapTable:
{}
----------------------------
Program id: 3
ExeStack:
[(print(VarExp{id='v'})
v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2})]
SymTable:
{v=2, x=0, y=0}
Out:
[0, 1]
FileTable:
{}
HeapTable:
{}
----------------------------
Program id: 0
ExeStack:
[(x=ValueExp{e=1}
(NopStmt{}
(y=ValueExp{e=3}
(NopStmt{}
print(ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=10}, op=3}))))), WhileStmt{exp=NegateExp{exp=RelExp{exp1=VarExp{id='v'}, exp2=ValueExp{e=3}, op='=='}}, stmt=(forkStmt{stmt=(print(VarExp{id='v'})
v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2})}
v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=1})}, v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=1}]
SymTable:
{v=2, x=0, y=0}
Out:
[0, 1]
FileTable:
{}
HeapTable:
{}
----------------------------
Program id: 3
ExeStack:
[(print(VarExp{id='v'})
v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2})]
SymTable:
{v=2, x=0, y=0}
Out:
[0, 1]
FileTable:
{}
HeapTable:
{}
----------------------------
Program id: 0
ExeStack:
[(x=ValueExp{e=1}
(NopStmt{}
(y=ValueExp{e=3}
(NopStmt{}
print(ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=10}, op=3}))))), WhileStmt{exp=NegateExp{exp=RelExp{exp1=VarExp{id='v'}, exp2=ValueExp{e=3}, op='=='}}, stmt=(forkStmt{stmt=(print(VarExp{id='v'})
v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2})}
v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=1})}]
SymTable:
{v=3, x=0, y=0}
Out:
[0, 1]
FileTable:
{}
HeapTable:
{}
----------------------------
Program id: 3
ExeStack:
[v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2}, print(VarExp{id='v'})]
SymTable:
{v=2, x=0, y=0}
Out:
[0, 1]
FileTable:
{}
HeapTable:
{}
----------------------------
Program id: 0
ExeStack:
[(x=ValueExp{e=1}
(NopStmt{}
(y=ValueExp{e=3}
(NopStmt{}
print(ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=10}, op=3}))))), WhileStmt{exp=NegateExp{exp=RelExp{exp1=VarExp{id='v'}, exp2=ValueExp{e=3}, op='=='}}, stmt=(forkStmt{stmt=(print(VarExp{id='v'})
v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2})}
v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=1})}]
SymTable:
{v=3, x=0, y=0}
Out:
[0, 1]
FileTable:
{}
HeapTable:
{}
----------------------------
Program id: 3
ExeStack:
[v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2}, print(VarExp{id='v'})]
SymTable:
{v=2, x=0, y=0}
Out:
[0, 1]
FileTable:
{}
HeapTable:
{}
----------------------------
Program id: 0
ExeStack:
[(x=ValueExp{e=1}
(NopStmt{}
(y=ValueExp{e=3}
(NopStmt{}
print(ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=10}, op=3})))))]
SymTable:
{v=3, x=0, y=0}
Out:
[0, 1, 2]
FileTable:
{}
HeapTable:
{}
----------------------------
Program id: 3
ExeStack:
[v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2}]
SymTable:
{v=2, x=0, y=0}
Out:
[0, 1, 2]
FileTable:
{}
HeapTable:
{}
----------------------------
Program id: 0
ExeStack:
[(x=ValueExp{e=1}
(NopStmt{}
(y=ValueExp{e=3}
(NopStmt{}
print(ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=10}, op=3})))))]
SymTable:
{v=3, x=0, y=0}
Out:
[0, 1, 2]
FileTable:
{}
HeapTable:
{}
----------------------------
Program id: 3
ExeStack:
[v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2}]
SymTable:
{v=2, x=0, y=0}
Out:
[0, 1, 2]
FileTable:
{}
HeapTable:
{}
----------------------------
Program id: 0
ExeStack:
[(NopStmt{}
(y=ValueExp{e=3}
(NopStmt{}
print(ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=10}, op=3})))), x=ValueExp{e=1}]
SymTable:
{v=3, x=0, y=0}
Out:
[0, 1, 2]
FileTable:
{}
HeapTable:
{}
----------------------------
Program id: 3
ExeStack:
[]
SymTable:
{v=1, x=0, y=0}
Out:
[0, 1, 2]
FileTable:
{}
HeapTable:
{}
----------------------------
Program id: 0
ExeStack:
[(NopStmt{}
(y=ValueExp{e=3}
(NopStmt{}
print(ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=10}, op=3})))), x=ValueExp{e=1}]
SymTable:
{v=3, x=0, y=0}
Out:
[0, 1, 2]
FileTable:
{}
HeapTable:
{}
----------------------------
Program id: 0
ExeStack:
[(NopStmt{}
(y=ValueExp{e=3}
(NopStmt{}
print(ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=10}, op=3}))))]
SymTable:
{v=3, x=1, y=0}
Out:
[0, 1, 2]
FileTable:
{}
HeapTable:
{}
----------------------------
Program id: 0
ExeStack:
[(NopStmt{}
(y=ValueExp{e=3}
(NopStmt{}
print(ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=10}, op=3}))))]
SymTable:
{v=3, x=1, y=0}
Out:
[0, 1, 2]
FileTable:
{}
HeapTable:
{}
----------------------------
Program id: 0
ExeStack:
[(y=ValueExp{e=3}
(NopStmt{}
print(ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=10}, op=3}))), NopStmt{}]
SymTable:
{v=3, x=1, y=0}
Out:
[0, 1, 2]
FileTable:
{}
HeapTable:
{}
----------------------------
Program id: 0
ExeStack:
[(y=ValueExp{e=3}
(NopStmt{}
print(ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=10}, op=3}))), NopStmt{}]
SymTable:
{v=3, x=1, y=0}
Out:
[0, 1, 2]
FileTable:
{}
HeapTable:
{}
----------------------------
Program id: 0
ExeStack:
[(y=ValueExp{e=3}
(NopStmt{}
print(ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=10}, op=3})))]
SymTable:
{v=3, x=1, y=0}
Out:
[0, 1, 2]
FileTable:
{}
HeapTable:
{}
----------------------------
Program id: 0
ExeStack:
[(y=ValueExp{e=3}
(NopStmt{}
print(ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=10}, op=3})))]
SymTable:
{v=3, x=1, y=0}
Out:
[0, 1, 2]
FileTable:
{}
HeapTable:
{}
----------------------------
Program id: 0
ExeStack:
[(NopStmt{}
print(ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=10}, op=3})), y=ValueExp{e=3}]
SymTable:
{v=3, x=1, y=0}
Out:
[0, 1, 2]
FileTable:
{}
HeapTable:
{}
----------------------------
Program id: 0
ExeStack:
[(NopStmt{}
print(ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=10}, op=3})), y=ValueExp{e=3}]
SymTable:
{v=3, x=1, y=0}
Out:
[0, 1, 2]
FileTable:
{}
HeapTable:
{}
----------------------------
Program id: 0
ExeStack:
[(NopStmt{}
print(ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=10}, op=3}))]
SymTable:
{v=3, x=1, y=3}
Out:
[0, 1, 2]
FileTable:
{}
HeapTable:
{}
----------------------------
Program id: 0
ExeStack:
[(NopStmt{}
print(ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=10}, op=3}))]
SymTable:
{v=3, x=1, y=3}
Out:
[0, 1, 2]
FileTable:
{}
HeapTable:
{}
----------------------------
Program id: 0
ExeStack:
[print(ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=10}, op=3}), NopStmt{}]
SymTable:
{v=3, x=1, y=3}
Out:
[0, 1, 2]
FileTable:
{}
HeapTable:
{}
----------------------------
Program id: 0
ExeStack:
[print(ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=10}, op=3}), NopStmt{}]
SymTable:
{v=3, x=1, y=3}
Out:
[0, 1, 2]
FileTable:
{}
HeapTable:
{}
----------------------------
Program id: 0
ExeStack:
[print(ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=10}, op=3})]
SymTable:
{v=3, x=1, y=3}
Out:
[0, 1, 2]
FileTable:
{}
HeapTable:
{}
----------------------------
Program id: 0
ExeStack:
[print(ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=10}, op=3})]
SymTable:
{v=3, x=1, y=3}
Out:
[0, 1, 2]
FileTable:
{}
HeapTable:
{}
----------------------------
Program id: 0
ExeStack:
[]
SymTable:
{v=3, x=1, y=3}
Out:
[0, 1, 2, 30]
FileTable:
{}
HeapTable:
{}
----------------------------
